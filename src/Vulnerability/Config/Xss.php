<?php
namespace Phulner\Vulnerability\Config;

use Phulner\Vulnerability\ConfigAbstract;
use Phulner\Injector;
use Phulner\NodeVisitor\Scope;
use Phulner\Function_\Sanitizer\Factory;

class Xss extends ConfigAbstract {
    public function __construct($identifier, $config, $project) {
        parent::__construct($identifier, $config, $project);

        $this->_sanitationFunctionsFactory = new Factory;

        if (isset($config->sanitationFunctions)) {
            foreach ($config->sanitationFunctions as $file) {
                $sanFunction = $project->requireFile($file);
                $this->_sanitationFunctionsFactory->add(call_user_func($sanFunction));
            }
        }

    }

    public function getInjector ($partConfig) {
        $injector = new Injector\Xss;

        $scope = new Scope;
        if (isset($partConfig->initialScope)) {
            foreach ($partConfig->initialScope as $var) {
                $scope->addFromConfig($var);
            }
        }
        $injector->setInitialScope($scope);

        if (isset($partConfig->method)) {
            $injector->setMethod($partConfig->method);
        } elseif (isset($this->_options->method)) {
            $injector->setMethod($this->_options->method);
        }

        $injector->setSanitationFunctionsFactory($this->_sanitationFunctionsFactory);

        return $injector;

    }

    private $_sanitationFunctionsFactory;
}

?>
